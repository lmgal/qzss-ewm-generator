import { useFormContext } from "react-hook-form"
import { IFormInput } from "../interface"

const hazards = [
    "not used",
    "CBRNE - Air Strike",
    "CBRNE - Attack on IT Systems",
    "CBRNE - Attack with Nuclear Weapons",
    "CBRNE - Biological Hazard",
    "CBRNE - Chemical Hazard",
    "CBRNE - Explosive Hazard",
    "CBRNE - Meteorite impact",
    "CBRNE - Missile Attack",
    "CBRNE - Nuclear Hazard",
    "CBRNE - Nuclear power station accident",
    "CBRNE - Radiological Hazard",
    "CBRNE - Satellite/Space Re-entry Debris",
    "CBRNE - Siren Test",
    "ENVIRONMENT - Acid Rain",
    "ENVIRONMENT - Air Pollution",
    "ENVIRONMENT - Contaminated drinking water",
    "ENVIRONMENT - Gas Leak",
    "ENVIRONMENT - Marine Pollution",
    "ENVIRONMENT - Noise Pollution",
    "ENVIRONMENT - Plague of Insects",
    "ENVIRONMENT - River Pollution",
    "ENVIRONMENT - Suspended dust",
    "ENVIRONMENT - UV radiation",
    "FIRE - Conflagration",
    "FIRE - Fire Brigade Deployment",
    "FIRE - Fire Gases",
    "FIRE - Forest Fire",
    "FIRE - Fumes",
    "FIRE - Odour Nuisance",
    "FIRE - Risk of Fire",
    "FIRE - Structure Fire / Industrial Fire",
    "GEO - Ash Fall",
    "GEO - Avalanche risk",
    "GEO - Crack in the Ground/Sinkhole",
    "GEO - Debris Flow",
    "GEO - Earthquake",
    "GEO - Geomagnetic or solar storm",
    "GEO - Glacial Ice Avalanche",
    "GEO - Landslide",
    "GEO - Lava Flow",
    "GEO - Pyroclastic Flow",
    "GEO - Snowdrifts",
    "GEO - Tidal Wave",
    "GEO - Tsunami",
    "GEO - Volcanic Mud Flow",
    "GEO - Volcano Eruption",
    "GEO - Wind/Wave/Storm Surge",
    "HEALTH - Epizootic",
    "HEALTH - Food Safety Alert",
    "HEALTH - Health Hazard",
    "HEALTH - Pandemia",
    "HEALTH - Pest Infestation",
    "HEALTH - Risk of Infection",
    "INFRASTRUCTURE - Building Collapse",
    "INFRASTRUCTURE - Emergency Number Outage",
    "INFRASTRUCTURE - Gas Supply Outage",
    "INFRASTRUCTURE - Outage of IT systems",
    "INFRASTRUCTURE - Power Outage",
    "INFRASTRUCTURE - Raw Sewage",
    "INFRASTRUCTURE - Telephone Line Outage",
    "MET - Black Ice",
    "MET - Coastal flooding",
    "MET - Cold wave",
    "MET - Derecho",
    "MET - Drought",
    "MET - Dust Storm",
    "MET - Floating ice / icebergs",
    "MET - Flood",
    "MET - Fog",
    "MET - Hail",
    "MET - Heat wave",
    "MET - Lightning",
    "MET - Pollens",
    "MET - Rainfall",
    "MET - Snow Storm / Blizzard",
    "MET - Snowfall",
    "MET - Storm or Thunderstorm",
    "MET - Thawing",
    "MET - Tornado",
    "MET - Tropical Cyclone (Hurricane)",
    "MET - Wind Chill/Frost",
    "MET - Tropical Cyclone (Typhoon)",
    "RESCUE - Dam Failure or Bursting of a Dam",
    "RESCUE - Dike Failure or Bursting of a Dike",
    "RESCUE - Explosive Ordnance Disposal",
    "RESCUE - Factory accident",
    "RESCUE - Mine hazard",
    "SAFETY - Bomb/ammunition discovery",
    "SAFETY - Demonstration",
    "SAFETY - Hazardous Material Accident",
    "SAFETY - Life Threatening Situation",
    "SAFETY - Major Event",
    "SAFETY - Missing Person/abduction",
    "SAFETY - Risk of explosion",
    "SAFETY - Safety Warning",
    "SAFETY - Undefined Flying Object",
    "SAFETY - Unidentified Animal",
    "SECURITY - Chemical Attack",
    "SECURITY - Guerrilla Attack",
    "SECURITY - Hijack",
    "SECURITY - Shooting or Danger due to weapons",
    "SECURITY - Special Forces Attack [tbc]",
    "SECURITY - Terrorism",
    "TRANSPORT - Aircraft Crash",
    "TRANSPORT - Bridge Collapse",
    "TRANSPORT - Dangerous goods accident",
    "TRANSPORT - Inland waterway transport accident",
    "TRANSPORT - Nautical disaster/Maritime/Marine Security",
    "TRANSPORT - Oil Spill",
    "TRANSPORT - Road Traffic Incident",
    "TRANSPORT - Train/Rail Accident",
    "TRANSPORT - Tunnel accident",
    "OTHER - Test Alert",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
    "reserved",
]

export function HazardSelect() {
    const form = useFormContext<IFormInput>()

    return (
        <select {...form.register('hazardTypeCategory', {
            valueAsNumber: true
        })}>
            { hazards.map((hazard, i) => (
                <option key={i} value={i}>
                    {hazard}
                </option>
            ))}
        </select>
    )
}
